// Generated by CIRCT firtool-1.62.0
module osmc_axi_read_burst_clip(
  input          clock,
                 reset,
  output         io_fifol1_arrio_ren,
  input  [53:0]  io_fifol1_arrio_rdata,
  input          io_fifol1_arrio_empty,
  output         io_fifol2_arwio_wen,
  output [45:0]  io_fifol2_arwio_wdata,
  input          io_fifol2_arwio_full,
  output         io_fifol1_rwio_wen,
  output [256:0] io_fifol1_rwio_wdata,
  input          io_fifol1_rwio_full,
  input  [9:0]   io_token_inio_artoken,
  output         io_token_countio_token_aren,
                 io_cmd_fifo_wio_wen,
  output [10:0]  io_cmd_fifo_wio_wdata,
  input          io_cmd_fifo_wio_full,
  output         io_cmd_fifo_rio_ren,
  input  [10:0]  io_cmd_fifo_rio_rdata,
  input          io_cmd_fifo_rio_empty,
  output         io_token_fifo_wio_wen,
  output [9:0]   io_token_fifo_wio_wdata,
  input          io_token_fifo_wio_full,
  input  [511:0] io_rrob_io_rdata,
  input          io_rrob_io_rvalid,
  output         io_rrob_io_rready
);

  wire              data_decond;
  wire              io_rrob_io_rready_0;
  wire              io_fifol1_arrio_ren_0;
  reg  [7:0]        arlen;
  reg  [2:0]        arsize;
  reg  [35:0]       burst_addr_0;
  reg  [35:0]       burst_addr_1;
  reg  [35:0]       burst_addr_2;
  reg  [35:0]       burst_addr_3;
  reg  [35:0]       burst_addr_4;
  reg  [35:0]       burst_addr_5;
  reg  [35:0]       burst_addr_6;
  reg  [35:0]       burst_addr_7;
  reg  [35:0]       burst_addr_8;
  reg  [35:0]       burst_addr_9;
  reg  [35:0]       burst_addr_10;
  reg  [35:0]       burst_addr_11;
  reg  [35:0]       burst_addr_12;
  reg  [35:0]       burst_addr_13;
  reg  [35:0]       burst_addr_14;
  reg  [35:0]       burst_addr_15;
  reg  [7:0]        ui_cmd_counter;
  reg               ui_cmd_counter_en;
  wire              cmd_counter_add_cond = ui_cmd_counter_en | io_fifol1_arrio_ren_0;
  wire [7:0]        _io_token_countio_token_aren_T_1 = ui_cmd_counter % 8'h2;
  assign io_fifol1_arrio_ren_0 =
    ui_cmd_counter == 8'h0 & ~io_fifol2_arwio_full & ~io_fifol1_arrio_empty
    & ~ui_cmd_counter_en & ~io_cmd_fifo_wio_full & ~io_token_fifo_wio_full;
  wire [7:0]        _io_fifol2_arwio_wen_T_3 = (ui_cmd_counter + 8'h1) % 8'h2;
  wire              io_fifol2_arwio_wen_0 =
    ~io_fifol2_arwio_full & _io_fifol2_arwio_wen_T_3[1:0] == 2'h0 & ui_cmd_counter_en
    & ~io_token_fifo_wio_full;
  wire [7:0]        _io_fifol2_arwio_wdata_T = ui_cmd_counter / 8'h2;
  wire [15:0][35:0] _GEN =
    {{burst_addr_15},
     {burst_addr_14},
     {burst_addr_13},
     {burst_addr_12},
     {burst_addr_11},
     {burst_addr_10},
     {burst_addr_9},
     {burst_addr_8},
     {burst_addr_7},
     {burst_addr_6},
     {burst_addr_5},
     {burst_addr_4},
     {burst_addr_3},
     {burst_addr_2},
     {burst_addr_1},
     {burst_addr_0}};
  reg               delay1;
  reg               delay2;
  reg  [255:0]      data_reg_0;
  reg  [255:0]      data_reg_1;
  reg  [8:0]        burst_counter;
  reg  [1:0]        data_counter;
  wire              _data_last_T = burst_counter == 9'h0;
  wire              io_cmd_fifo_rio_ren_0 = _data_last_T & ~io_cmd_fifo_rio_empty;
  wire              _io_fifol1_rwio_wen_T_2 = io_rrob_io_rready_0 & io_rrob_io_rvalid;
  assign io_rrob_io_rready_0 = ~io_fifol1_rwio_full & data_counter == 2'h0;
  assign data_decond = ~io_fifol1_rwio_full & ((|data_counter) | _io_fifol1_rwio_wen_T_2);
  wire [15:0]       _UiCmdNum_T = {arlen + 8'h1, 8'h0} - 16'h1;
  always @(posedge clock) begin
    if (reset) begin
      arlen <= 8'h0;
      arsize <= 3'h0;
      burst_addr_0 <= 36'h0;
      burst_addr_1 <= 36'h0;
      burst_addr_2 <= 36'h0;
      burst_addr_3 <= 36'h0;
      burst_addr_4 <= 36'h0;
      burst_addr_5 <= 36'h0;
      burst_addr_6 <= 36'h0;
      burst_addr_7 <= 36'h0;
      burst_addr_8 <= 36'h0;
      burst_addr_9 <= 36'h0;
      burst_addr_10 <= 36'h0;
      burst_addr_11 <= 36'h0;
      burst_addr_12 <= 36'h0;
      burst_addr_13 <= 36'h0;
      burst_addr_14 <= 36'h0;
      burst_addr_15 <= 36'h0;
      ui_cmd_counter <= 8'h0;
      ui_cmd_counter_en <= 1'h0;
      data_reg_0 <= 256'h0;
      data_reg_1 <= 256'h0;
      burst_counter <= 9'h0;
      data_counter <= 2'h0;
    end
    else begin
      if (io_fifol1_arrio_ren_0) begin
        arlen <= io_fifol1_arrio_rdata[14:7];
        arsize <= io_fifol1_arrio_rdata[6:4];
        burst_addr_0 <= io_fifol1_arrio_rdata[52:17];
        burst_addr_1 <= io_fifol1_arrio_rdata[52:17] + 36'h40;
        burst_addr_2 <= io_fifol1_arrio_rdata[52:17] + 36'h80;
        burst_addr_3 <= io_fifol1_arrio_rdata[52:17] + 36'hC0;
        burst_addr_4 <= io_fifol1_arrio_rdata[52:17] + 36'h100;
        burst_addr_5 <= io_fifol1_arrio_rdata[52:17] + 36'h140;
        burst_addr_6 <= io_fifol1_arrio_rdata[52:17] + 36'h180;
        burst_addr_7 <= io_fifol1_arrio_rdata[52:17] + 36'h1C0;
        burst_addr_8 <= io_fifol1_arrio_rdata[52:17] + 36'h200;
        burst_addr_9 <= io_fifol1_arrio_rdata[52:17] + 36'h240;
        burst_addr_10 <= io_fifol1_arrio_rdata[52:17] + 36'h280;
        burst_addr_11 <= io_fifol1_arrio_rdata[52:17] + 36'h2C0;
        burst_addr_12 <= io_fifol1_arrio_rdata[52:17] + 36'h300;
        burst_addr_13 <= io_fifol1_arrio_rdata[52:17] + 36'h340;
        burst_addr_14 <= io_fifol1_arrio_rdata[52:17] + 36'h380;
        burst_addr_15 <= io_fifol1_arrio_rdata[52:17] + 36'h3C0;
      end
      if ({2'h0, ui_cmd_counter} == {1'h0, {1'h0, _UiCmdNum_T[15:9]} + 8'h1, 1'h0} - 10'h1
          & cmd_counter_add_cond)
        ui_cmd_counter <= 8'h0;
      else
        ui_cmd_counter <= ui_cmd_counter + {7'h0, cmd_counter_add_cond};
      if (ui_cmd_counter_en)
        ui_cmd_counter_en <= ~io_fifol2_arwio_wen_0 & ui_cmd_counter_en;
      else
        ui_cmd_counter_en <= io_fifol1_arrio_ren_0 | ui_cmd_counter_en;
      if (io_rrob_io_rvalid) begin
        data_reg_0 <= io_rrob_io_rdata[255:0];
        data_reg_1 <= io_rrob_io_rdata[511:256];
        data_counter <= 2'h1;
      end
      else if (data_decond)
        data_counter <= 2'h0;
      if (io_cmd_fifo_rio_ren_0)
        burst_counter <= {1'h0, io_cmd_fifo_rio_rdata[10:3]};
      else if (data_decond) begin
        if (_data_last_T)
          burst_counter <= 9'h0;
        else
          burst_counter <= burst_counter - 9'h1;
      end
    end
    delay1 <= io_fifol1_arrio_ren_0;
    delay2 <= delay1;
  end // always @(posedge)
  assign io_fifol1_arrio_ren = io_fifol1_arrio_ren_0;
  assign io_fifol2_arwio_wen = io_fifol2_arwio_wen_0;
  assign io_fifol2_arwio_wdata =
    {io_token_inio_artoken, _GEN[_io_fifol2_arwio_wdata_T[3:0]]};
  assign io_fifol1_rwio_wen = data_decond;
  assign io_fifol1_rwio_wdata =
    {data_decond & _data_last_T,
     _io_fifol1_rwio_wen_T_2
       ? io_rrob_io_rdata[255:0]
       : data_counter[0] ? data_reg_1 : data_reg_0};
  assign io_token_countio_token_aren =
    ~io_fifol2_arwio_full & _io_token_countio_token_aren_T_1[1:0] == 2'h0
    & cmd_counter_add_cond & ~io_token_fifo_wio_full;
  assign io_cmd_fifo_wio_wen = delay2;
  assign io_cmd_fifo_wio_wdata = {arlen, arsize};
  assign io_cmd_fifo_rio_ren = io_cmd_fifo_rio_ren_0;
  assign io_token_fifo_wio_wen = io_fifol2_arwio_wen_0;
  assign io_token_fifo_wio_wdata = io_token_inio_artoken;
  assign io_rrob_io_rready = io_rrob_io_rready_0;
endmodule

