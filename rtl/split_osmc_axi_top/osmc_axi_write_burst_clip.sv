// Generated by CIRCT firtool-1.62.0
module osmc_axi_write_burst_clip(
  input          clock,
                 reset,
  output         io_fifol1_awrio_ren,
  input  [53:0]  io_fifol1_awrio_rdata,
  input          io_fifol1_awrio_empty,
  output         io_fifol2_awwio_wen,
  output [45:0]  io_fifol2_awwio_wdata,
  input          io_fifol2_awwio_full,
  output         io_fifol1_wrio_ren,
  input  [288:0] io_fifol1_wrio_rdata,
  input          io_fifol1_wrio_empty,
  output         io_fifol2_wwio_wen,
  output [575:0] io_fifol2_wwio_wdata,
  input          io_fifol2_wwio_full,
  input  [9:0]   io_token_inio_awtoken,
  output         io_token_countio_token_awen
);

  wire              io_fifol1_awrio_ren_0;
  reg  [7:0]        awlen;
  reg  [35:0]       burst_addr_0;
  reg  [35:0]       burst_addr_1;
  reg  [35:0]       burst_addr_2;
  reg  [35:0]       burst_addr_3;
  reg  [35:0]       burst_addr_4;
  reg  [35:0]       burst_addr_5;
  reg  [35:0]       burst_addr_6;
  reg  [35:0]       burst_addr_7;
  reg  [35:0]       burst_addr_8;
  reg  [35:0]       burst_addr_9;
  reg  [35:0]       burst_addr_10;
  reg  [35:0]       burst_addr_11;
  reg  [35:0]       burst_addr_12;
  reg  [35:0]       burst_addr_13;
  reg  [35:0]       burst_addr_14;
  reg  [35:0]       burst_addr_15;
  reg  [7:0]        ui_cmd_counter;
  reg               ui_cmd_counter_en;
  wire              cmd_counter_add_cond = ui_cmd_counter_en | io_fifol1_awrio_ren_0;
  wire [7:0]        _io_token_countio_token_awen_T_1 = ui_cmd_counter % 8'h2;
  assign io_fifol1_awrio_ren_0 =
    ui_cmd_counter == 8'h0 & ~io_fifol2_awwio_full & ~io_fifol1_awrio_empty
    & ~ui_cmd_counter_en;
  wire [7:0]        _io_fifol2_awwio_wen_T_3 = (ui_cmd_counter + 8'h1) % 8'h2;
  wire              io_fifol2_awwio_wen_0 =
    ~io_fifol2_awwio_full & _io_fifol2_awwio_wen_T_3[1:0] == 2'h0 & ui_cmd_counter_en;
  wire [7:0]        _io_fifol2_awwio_wdata_T = ui_cmd_counter / 8'h2;
  wire [15:0][35:0] _GEN =
    {{burst_addr_15},
     {burst_addr_14},
     {burst_addr_13},
     {burst_addr_12},
     {burst_addr_11},
     {burst_addr_10},
     {burst_addr_9},
     {burst_addr_8},
     {burst_addr_7},
     {burst_addr_6},
     {burst_addr_5},
     {burst_addr_4},
     {burst_addr_3},
     {burst_addr_2},
     {burst_addr_1},
     {burst_addr_0}};
  reg  [1:0]        data_counter;
  reg  [255:0]      UI_data_0;
  reg  [255:0]      UI_data_1;
  reg  [31:0]       UI_data_mask_0;
  reg  [31:0]       UI_data_mask_1;
  reg               data_counter_add_cond;
  wire              data_counter_reset_cond =
    data_counter == 2'h1 & data_counter_add_cond;
  reg               w_ren_flag;
  wire              io_fifol1_wrio_ren_0 =
    ~io_fifol1_wrio_empty & ~io_fifol2_wwio_full & w_ren_flag;
  wire [7:0]        _mask_slice_num_T = awlen + 8'h1;
  wire [15:0]       _UiCmdNum_T = {_mask_slice_num_T, 8'h0} - 16'h1;
  wire              _GEN_0 = {6'h0, data_counter} >= 8'h2 - _mask_slice_num_T / 8'h2;
  always @(posedge clock) begin
    if (reset) begin
      awlen <= 8'h0;
      burst_addr_0 <= 36'h0;
      burst_addr_1 <= 36'h0;
      burst_addr_2 <= 36'h0;
      burst_addr_3 <= 36'h0;
      burst_addr_4 <= 36'h0;
      burst_addr_5 <= 36'h0;
      burst_addr_6 <= 36'h0;
      burst_addr_7 <= 36'h0;
      burst_addr_8 <= 36'h0;
      burst_addr_9 <= 36'h0;
      burst_addr_10 <= 36'h0;
      burst_addr_11 <= 36'h0;
      burst_addr_12 <= 36'h0;
      burst_addr_13 <= 36'h0;
      burst_addr_14 <= 36'h0;
      burst_addr_15 <= 36'h0;
      ui_cmd_counter <= 8'h0;
      ui_cmd_counter_en <= 1'h0;
      data_counter <= 2'h0;
      UI_data_0 <= 256'h0;
      UI_data_1 <= 256'h0;
      UI_data_mask_0 <= 32'h0;
      UI_data_mask_1 <= 32'h0;
      data_counter_add_cond <= 1'h0;
      w_ren_flag <= 1'h0;
    end
    else begin
      if (io_fifol1_awrio_ren_0) begin
        awlen <= io_fifol1_awrio_rdata[14:7];
        burst_addr_0 <= io_fifol1_awrio_rdata[52:17];
        burst_addr_1 <= io_fifol1_awrio_rdata[52:17] + 36'h40;
        burst_addr_2 <= io_fifol1_awrio_rdata[52:17] + 36'h80;
        burst_addr_3 <= io_fifol1_awrio_rdata[52:17] + 36'hC0;
        burst_addr_4 <= io_fifol1_awrio_rdata[52:17] + 36'h100;
        burst_addr_5 <= io_fifol1_awrio_rdata[52:17] + 36'h140;
        burst_addr_6 <= io_fifol1_awrio_rdata[52:17] + 36'h180;
        burst_addr_7 <= io_fifol1_awrio_rdata[52:17] + 36'h1C0;
        burst_addr_8 <= io_fifol1_awrio_rdata[52:17] + 36'h200;
        burst_addr_9 <= io_fifol1_awrio_rdata[52:17] + 36'h240;
        burst_addr_10 <= io_fifol1_awrio_rdata[52:17] + 36'h280;
        burst_addr_11 <= io_fifol1_awrio_rdata[52:17] + 36'h2C0;
        burst_addr_12 <= io_fifol1_awrio_rdata[52:17] + 36'h300;
        burst_addr_13 <= io_fifol1_awrio_rdata[52:17] + 36'h340;
        burst_addr_14 <= io_fifol1_awrio_rdata[52:17] + 36'h380;
        burst_addr_15 <= io_fifol1_awrio_rdata[52:17] + 36'h3C0;
      end
      if ({2'h0, ui_cmd_counter} == {1'h0, {1'h0, _UiCmdNum_T[15:9]} + 8'h1, 1'h0} - 10'h1
          & cmd_counter_add_cond)
        ui_cmd_counter <= 8'h0;
      else
        ui_cmd_counter <= ui_cmd_counter + {7'h0, cmd_counter_add_cond};
      if (ui_cmd_counter_en)
        ui_cmd_counter_en <= ~io_fifol2_awwio_wen_0 & ui_cmd_counter_en;
      else
        ui_cmd_counter_en <= io_fifol1_awrio_ren_0 | ui_cmd_counter_en;
      if (data_counter_reset_cond)
        data_counter <= 2'h0;
      else
        data_counter <= data_counter + {1'h0, data_counter_add_cond};
      if (_mask_slice_num_T[0]) begin
        if (_GEN_0 & ~(data_counter[0])) begin
          UI_data_0 <= 256'h0;
          UI_data_mask_0 <= 32'h0;
        end
        if (_GEN_0 & data_counter[0]) begin
          UI_data_1 <= 256'h0;
          UI_data_mask_1 <= 32'h0;
        end
      end
      else if (io_fifol1_wrio_ren_0) begin
        UI_data_0 <= io_fifol1_wrio_rdata[288:33];
        UI_data_1 <= UI_data_0;
        UI_data_mask_0 <= 32'hFFFFFFFF;
        UI_data_mask_1 <= UI_data_mask_0;
      end
      data_counter_add_cond <= io_fifol1_wrio_ren_0;
      w_ren_flag <= w_ren_flag | io_fifol1_awrio_ren_0;
    end
  end // always @(posedge)
  assign io_fifol1_awrio_ren = io_fifol1_awrio_ren_0;
  assign io_fifol2_awwio_wen = io_fifol2_awwio_wen_0;
  assign io_fifol2_awwio_wdata =
    {io_token_inio_awtoken, _GEN[_io_fifol2_awwio_wdata_T[3:0]]};
  assign io_fifol1_wrio_ren = io_fifol1_wrio_ren_0;
  assign io_fifol2_wwio_wen = data_counter_reset_cond;
  assign io_fifol2_wwio_wdata = {UI_data_mask_0, UI_data_mask_1, UI_data_0, UI_data_1};
  assign io_token_countio_token_awen =
    ~io_fifol2_awwio_full & _io_token_countio_token_awen_T_1[1:0] == 2'h0
    & cmd_counter_add_cond;
endmodule

